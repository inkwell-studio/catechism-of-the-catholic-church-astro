---
import { DEFAULT_LANGUAGE, Language } from '@catechism/source/types/types';
import { getLanguages } from '@catechism/source/utils/language';

import { getPathIdLanguageUrlMapSync, getSemanticPathPathIdMapSync } from '@logic/artifacts';
import { path as joinPaths } from '@logic/navigation-utils';
import { getParagraphNumber, removeLanguageTag } from '@logic/routing';
import { BasicPath, basicPaths } from '@pages/_routes';

import { Menu } from './menu';

interface Props {
    currentLanguage: Language;
}

const { currentLanguage } = Astro.props;

const semanticPathPathIdMap = getSemanticPathPathIdMapSync(currentLanguage);
const pathIdLanguageUrlMap = getPathIdLanguageUrlMapSync();

const path = removeLanguageTag(Astro.params.path, currentLanguage);
const pathID = semanticPathPathIdMap[path] ?? null;

const isBasicPath = basicPaths.includes(path as BasicPath);

const paragraphNumber = getParagraphNumber(path);
const languageUrlMap = pathID ? pathIdLanguageUrlMap[pathID] : [];

const menuItems = getLanguages().map(([languageKey, language]) => {
    let segment = '';

    if (!path) {
        segment = '';
    } else if (isBasicPath) {
        segment = path;
    } else if (paragraphNumber) {
        segment = paragraphNumber + '';
    } else {
        segment = languageUrlMap[language];
        if (!segment) {
            throw new Error(`A language-switching URL could not be determined (path: ${path}, pathID: ${pathID}, language: ${language})`);
        }
    }

    let url = null;
    if (language !== currentLanguage) {
        // prettier-ignore
        const languagePrefix = DEFAULT_LANGUAGE === language
            ? ''
            : language;

        // prettier-ignore
        url = !languagePrefix && !segment
            ? '/'
            : joinPaths('/', languagePrefix, segment);
    }

    return { label: languageKey, url: url };
});
---

<Menu items={menuItems} client:load />
